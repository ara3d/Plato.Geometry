// Autogenerated file: DO NOT EDIT
// Created on 2025-01-16 5:04:08 PM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct Scale3D: ITransform3D<Scale3D>
    {
        // Fields
        [DataMember] public readonly Vector3 Scale;

        // With functions 
        [MethodImpl(AggressiveInlining)] public Scale3D WithScale(Vector3 scale) => new Scale3D(scale);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public Scale3D(Vector3 scale) { Scale = scale; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static Scale3D Create(Vector3 scale) => new Scale3D(scale);

        // Implicit converters to/from single field
        [MethodImpl(AggressiveInlining)] public static implicit operator Vector3(Scale3D self) => self.Scale;
        [MethodImpl(AggressiveInlining)] public static implicit operator Scale3D(Vector3 value) => new Scale3D(value);

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(Scale3D other) => Scale.Equals(other.Scale);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is Scale3D other ? Equals(other) : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(Scale);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"Scale\" = {Scale} }}";

        // Explicit implementation of interfaces by forwarding properties to fields

        // Implemented concept functions and type functions
        public Matrix4x4 Matrix4x4 { [MethodImpl(AggressiveInlining)] get  => this.Matrix; } 
        [MethodImpl(AggressiveInlining)]  public static implicit operator Matrix4x4(Scale3D t) => t.Matrix4x4;

        // Unimplemented concept functions
        [MethodImpl(AggressiveInlining)]  public Vector3 Transform(Vector3 v) => throw new NotImplementedException();
        [MethodImpl(AggressiveInlining)]  public Vector3 TransformNormal(Vector3 v) => throw new NotImplementedException();
        public Matrix4x4 Matrix => throw new NotImplementedException();
        public Scale3D Invert => throw new NotImplementedException();
    }
}
