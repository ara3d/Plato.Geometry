// Autogenerated file: DO NOT EDIT
// Created on 2025-04-08 12:25:04 AM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct TschirnhausenCubic: IPolarCurve, IOpenShape
    {
        // Fields
        [DataMember] public readonly Number A;

        // With functions 
        [MethodImpl(AggressiveInlining)] public TschirnhausenCubic WithA(Number a) => new TschirnhausenCubic(a);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public TschirnhausenCubic(Number a) { A = a; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static TschirnhausenCubic Create(Number a) => new TschirnhausenCubic(a);

        // Static default implementation
        public static readonly TschirnhausenCubic Default = default;

        // Implicit converters to/from single field
        [MethodImpl(AggressiveInlining)] public static implicit operator Number(TschirnhausenCubic self) => self.A;
        [MethodImpl(AggressiveInlining)] public static implicit operator TschirnhausenCubic(Number value) => new TschirnhausenCubic(value);
        [MethodImpl(AggressiveInlining)] public static implicit operator TschirnhausenCubic(Integer value) => new TschirnhausenCubic(value);
        [MethodImpl(AggressiveInlining)] public static implicit operator TschirnhausenCubic(int value) => new Integer(value);
        [MethodImpl(AggressiveInlining)] public static implicit operator TschirnhausenCubic(float value) => new Number(value);
        [MethodImpl(AggressiveInlining)] public static implicit operator float(TschirnhausenCubic value) => value.A;

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(TschirnhausenCubic other) => A.Equals(other.A);
        [MethodImpl(AggressiveInlining)] public Boolean NotEquals(TschirnhausenCubic other) => !A.Equals(other.A);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is TschirnhausenCubic other ? Equals(other).Value : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(A);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"A\" = {A} }}";

        // Explicit implementation of interfaces by forwarding properties to fields

        // Implemented interface functions
        [MethodImpl(AggressiveInlining)]  public Number GetRadius(Angle t) => t.TschirnhausenCubic(this.A);
[MethodImpl(AggressiveInlining)]  public PolarCoordinate EvalPolar(Angle t) => (this.GetRadius(t), t);
[MethodImpl(AggressiveInlining)]  public Point2D Eval(Angle t) => this.EvalPolar(t);
[MethodImpl(AggressiveInlining)]  public Point2D Eval(Number t) => this.Eval(t.Turns);
[MethodImpl(AggressiveInlining)]  public IArray<Point2D> Sample(Integer numPoints){
            var _var80 = this;
            return numPoints.LinearSpace.Map((x)  => _var80.Eval(x));
        }

[MethodImpl(AggressiveInlining)]  public PolyLine2D ToPolyLine2D(Integer numPoints) => (this.Sample(numPoints), this.Closed);
public Boolean Closed { [MethodImpl(AggressiveInlining)] get  => ((Boolean)false); } 

        // Unimplemented interface functions
    }
}
