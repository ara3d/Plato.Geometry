// Autogenerated file: DO NOT EDIT
// Created on 2025-01-17 3:12:39 PM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct ColorHSV: ICoordinate<ColorHSV>
    {
        // Fields
        [DataMember] public readonly Angle Hue;
        [DataMember] public readonly Unit S;
        [DataMember] public readonly Unit V;

        // With functions 
        [MethodImpl(AggressiveInlining)] public ColorHSV WithHue(Angle hue) => new ColorHSV(hue, S, V);
        [MethodImpl(AggressiveInlining)] public ColorHSV WithS(Unit s) => new ColorHSV(Hue, s, V);
        [MethodImpl(AggressiveInlining)] public ColorHSV WithV(Unit v) => new ColorHSV(Hue, S, v);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public ColorHSV(Angle hue, Unit s, Unit v) { Hue = hue; S = s; V = v; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static ColorHSV Create(Angle hue, Unit s, Unit v) => new ColorHSV(hue, s, v);

        // Implicit converters to/from value-tuples and deconstructor
        [MethodImpl(AggressiveInlining)] public static implicit operator (Angle, Unit, Unit)(ColorHSV self) => (self.Hue, self.S, self.V);
        [MethodImpl(AggressiveInlining)] public static implicit operator ColorHSV((Angle, Unit, Unit) value) => new(value.Item1, value.Item2, value.Item3);
        [MethodImpl(AggressiveInlining)] public void Deconstruct(out Angle hue, out Unit s, out Unit v) { hue = Hue; s = S; v = V;  }

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(ColorHSV other) => Hue.Equals(other.Hue) && S.Equals(other.S) && V.Equals(other.V);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is ColorHSV other ? Equals(other) : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(Hue, S, V);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"Hue\" = {Hue}, \"S\" = {S}, \"V\" = {V} }}";

        // Explicit implementation of interfaces by forwarding properties to fields

        // Implemented concept functions and type functions
        [MethodImpl(AggressiveInlining)]  public IArray<ColorHSV> Repeat(Integer n){
            var _var35 = this;
            return n.MapRange((i) => _var35);
        }


        // Unimplemented concept functions
    }
}
