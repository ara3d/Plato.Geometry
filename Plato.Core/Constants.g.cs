// Autogenerated file: DO NOT EDIT
// Created on 2025-03-18 2:15:23 PM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    public static class Constants
    {
        public static Number Zero { [MethodImpl(AggressiveInlining)] get  => ((Number)0); } 
public static Number One { [MethodImpl(AggressiveInlining)] get  => ((Number)1); } 
public static Number MinusOne { [MethodImpl(AggressiveInlining)] get  => ((Number)1).Negative; } 
public static Number Epsilon { [MethodImpl(AggressiveInlining)] get  => ((Number)1E-07); } 
public static Number MinNumber { [MethodImpl(AggressiveInlining)] get  => ((Number)3.40282347E+38); } 
public static Number MaxNumber { [MethodImpl(AggressiveInlining)] get  => ((Number)3.40282347E+38).Negative; } 
public static Number Pi { [MethodImpl(AggressiveInlining)] get  => ((Number)3.1415926535897); } 
public static Number E { [MethodImpl(AggressiveInlining)] get  => ((Number)2.718281828459); } 
public static Number GoldenRatio { [MethodImpl(AggressiveInlining)] get  => ((Number)1.6180339887); } 
public static Number SqrtTwo { [MethodImpl(AggressiveInlining)] get  => ((Number)1.41421356237); } 
public static Number SqrtThree { [MethodImpl(AggressiveInlining)] get  => ((Number)1.73205080757); } 
public static Number SqrtFive { [MethodImpl(AggressiveInlining)] get  => ((Number)2.2360679775); } 
public static Number Ln10 { [MethodImpl(AggressiveInlining)] get  => ((Number)2.302585093); } 
public static Number Ln2 { [MethodImpl(AggressiveInlining)] get  => ((Number)0.69314718056); } 
public static Number Log10E { [MethodImpl(AggressiveInlining)] get  => ((Number)0.4342944819); } 
public static Number TwoPi { [MethodImpl(AggressiveInlining)] get  => Constants.Pi.Twice; } 
public static Number HalfPi { [MethodImpl(AggressiveInlining)] get  => Constants.Pi.Half; } 
public static Number RadiansPerDegree { [MethodImpl(AggressiveInlining)] get  => Constants.Pi.Divide(((Number)180)); } 
public static Number DegreesPerRadian { [MethodImpl(AggressiveInlining)] get  => ((Number)180).Divide(Constants.Pi); } 
public static Number FeetPerMeter { [MethodImpl(AggressiveInlining)] get  => ((Number)3.280839895); } 
public static Number FeetPerMile { [MethodImpl(AggressiveInlining)] get  => ((Integer)5280); } 
public static Number PoundPerKilogram { [MethodImpl(AggressiveInlining)] get  => ((Number)0.45359237); } 
public static Number PoundPerTon { [MethodImpl(AggressiveInlining)] get  => ((Integer)2000); } 
public static Number OuncePerGram { [MethodImpl(AggressiveInlining)] get  => ((Number)28.349523125); } 
public static Number TroyOuncePerGram { [MethodImpl(AggressiveInlining)] get  => ((Number)31.1034768); } 
public static Number GregorianYearDays { [MethodImpl(AggressiveInlining)] get  => ((Number)365.2425); } 
public static Vector2 XAxis2D { [MethodImpl(AggressiveInlining)] get  => Vector2.UnitX; } 
public static Vector2 YAxis2D { [MethodImpl(AggressiveInlining)] get  => Vector2.UnitY; } 
public static Vector3 XAxis3D { [MethodImpl(AggressiveInlining)] get  => Vector3.UnitX; } 
public static Vector3 YAxis3D { [MethodImpl(AggressiveInlining)] get  => Vector3.UnitY; } 
public static Vector3 ZAxis3D { [MethodImpl(AggressiveInlining)] get  => Vector3.UnitZ; } 
public static NumberInterval UnitInterval { [MethodImpl(AggressiveInlining)] get  => (((Number)0), ((Number)1)); } 
public static Circle UnitCircle { [MethodImpl(AggressiveInlining)] get  => ((((Number)0), ((Number)0)), ((Number)1)); } 
public static IdentityTransform3D IdentityTransform3D { [MethodImpl(AggressiveInlining)] get  => new IdentityTransform3D(); } 
}
}
