// Autogenerated file: DO NOT EDIT
// Created on 2025-04-08 12:25:04 AM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct CubicBezier3D: IOpenShape
    {
        // Fields
        [DataMember] public readonly Point3D A;
        [DataMember] public readonly Point3D B;
        [DataMember] public readonly Point3D C;
        [DataMember] public readonly Point3D D;

        // With functions 
        [MethodImpl(AggressiveInlining)] public CubicBezier3D WithA(Point3D a) => new CubicBezier3D(a, B, C, D);
        [MethodImpl(AggressiveInlining)] public CubicBezier3D WithB(Point3D b) => new CubicBezier3D(A, b, C, D);
        [MethodImpl(AggressiveInlining)] public CubicBezier3D WithC(Point3D c) => new CubicBezier3D(A, B, c, D);
        [MethodImpl(AggressiveInlining)] public CubicBezier3D WithD(Point3D d) => new CubicBezier3D(A, B, C, d);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public CubicBezier3D(Point3D a, Point3D b, Point3D c, Point3D d) { A = a; B = b; C = c; D = d; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static CubicBezier3D Create(Point3D a, Point3D b, Point3D c, Point3D d) => new CubicBezier3D(a, b, c, d);

        // Static default implementation
        public static readonly CubicBezier3D Default = default;

        // Implicit converters to/from value-tuples and deconstructor
        [MethodImpl(AggressiveInlining)] public static implicit operator (Point3D, Point3D, Point3D, Point3D)(CubicBezier3D self) => (self.A, self.B, self.C, self.D);
        [MethodImpl(AggressiveInlining)] public static implicit operator CubicBezier3D((Point3D, Point3D, Point3D, Point3D) value) => new CubicBezier3D(value.Item1, value.Item2, value.Item3, value.Item4);
        [MethodImpl(AggressiveInlining)] public void Deconstruct(out Point3D a, out Point3D b, out Point3D c, out Point3D d) { a = A; b = B; c = C; d = D;  }

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(CubicBezier3D other) => A.Equals(other.A) && B.Equals(other.B) && C.Equals(other.C) && D.Equals(other.D);
        [MethodImpl(AggressiveInlining)] public Boolean NotEquals(CubicBezier3D other) => !A.Equals(other.A) && B.Equals(other.B) && C.Equals(other.C) && D.Equals(other.D);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is CubicBezier3D other ? Equals(other).Value : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(A, B, C, D);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"A\" = {A}, \"B\" = {B}, \"C\" = {C}, \"D\" = {D} }}";

        // Explicit implementation of interfaces by forwarding properties to fields

        // Implemented interface functions
        [MethodImpl(AggressiveInlining)]  public Point3D Eval(Number t) => this.A.Vector3.CubicBezier(this.B, this.C, this.D, t);
public Boolean Closed { [MethodImpl(AggressiveInlining)] get  => ((Boolean)false); } 

        // Unimplemented interface functions
    }
}
