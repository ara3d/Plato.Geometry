// Autogenerated file: DO NOT EDIT
// Created on 2025-03-14 12:36:59 PM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct Box2D: IShape2D
    {
        // Fields
        [DataMember] public readonly Vector2 Center;
        [DataMember] public readonly Angle Rotation;
        [DataMember] public readonly Vector2 Extent;

        // With functions 
        [MethodImpl(AggressiveInlining)] public Box2D WithCenter(Vector2 center) => new Box2D(center, Rotation, Extent);
        [MethodImpl(AggressiveInlining)] public Box2D WithRotation(Angle rotation) => new Box2D(Center, rotation, Extent);
        [MethodImpl(AggressiveInlining)] public Box2D WithExtent(Vector2 extent) => new Box2D(Center, Rotation, extent);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public Box2D(Vector2 center, Angle rotation, Vector2 extent) { Center = center; Rotation = rotation; Extent = extent; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static Box2D Create(Vector2 center, Angle rotation, Vector2 extent) => new Box2D(center, rotation, extent);

        // Implicit converters to/from value-tuples and deconstructor
        [MethodImpl(AggressiveInlining)] public static implicit operator (Vector2, Angle, Vector2)(Box2D self) => (self.Center, self.Rotation, self.Extent);
        [MethodImpl(AggressiveInlining)] public static implicit operator Box2D((Vector2, Angle, Vector2) value) => new(value.Item1, value.Item2, value.Item3);
        [MethodImpl(AggressiveInlining)] public void Deconstruct(out Vector2 center, out Angle rotation, out Vector2 extent) { center = Center; rotation = Rotation; extent = Extent;  }

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(Box2D other) => Center.Equals(other.Center) && Rotation.Equals(other.Rotation) && Extent.Equals(other.Extent);
        [MethodImpl(AggressiveInlining)] public Boolean NotEquals(Box2D other) => !Center.Equals(other.Center) && Rotation.Equals(other.Rotation) && Extent.Equals(other.Extent);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is Box2D other ? Equals(other) : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(Center, Rotation, Extent);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"Center\" = {Center}, \"Rotation\" = {Rotation}, \"Extent\" = {Extent} }}";

        // Explicit implementation of interfaces by forwarding properties to fields

        // Implemented interface functions

        // Unimplemented concept functions
    }
}
