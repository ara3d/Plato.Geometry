// Autogenerated file: DO NOT EDIT
// Created on 2025-01-20 10:41:00 PM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct CylindricalCoordinate: ICoordinate
    {
        // Fields
        [DataMember] public readonly Number RadialDistance;
        [DataMember] public readonly Angle Azimuth;
        [DataMember] public readonly Number Height;

        // With functions 
        [MethodImpl(AggressiveInlining)] public CylindricalCoordinate WithRadialDistance(Number radialDistance) => new CylindricalCoordinate(radialDistance, Azimuth, Height);
        [MethodImpl(AggressiveInlining)] public CylindricalCoordinate WithAzimuth(Angle azimuth) => new CylindricalCoordinate(RadialDistance, azimuth, Height);
        [MethodImpl(AggressiveInlining)] public CylindricalCoordinate WithHeight(Number height) => new CylindricalCoordinate(RadialDistance, Azimuth, height);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public CylindricalCoordinate(Number radialDistance, Angle azimuth, Number height) { RadialDistance = radialDistance; Azimuth = azimuth; Height = height; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static CylindricalCoordinate Create(Number radialDistance, Angle azimuth, Number height) => new CylindricalCoordinate(radialDistance, azimuth, height);

        // Implicit converters to/from value-tuples and deconstructor
        [MethodImpl(AggressiveInlining)] public static implicit operator (Number, Angle, Number)(CylindricalCoordinate self) => (self.RadialDistance, self.Azimuth, self.Height);
        [MethodImpl(AggressiveInlining)] public static implicit operator CylindricalCoordinate((Number, Angle, Number) value) => new(value.Item1, value.Item2, value.Item3);
        [MethodImpl(AggressiveInlining)] public void Deconstruct(out Number radialDistance, out Angle azimuth, out Number height) { radialDistance = RadialDistance; azimuth = Azimuth; height = Height;  }

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(CylindricalCoordinate other) => RadialDistance.Equals(other.RadialDistance) && Azimuth.Equals(other.Azimuth) && Height.Equals(other.Height);
        [MethodImpl(AggressiveInlining)] public Boolean NotEquals(CylindricalCoordinate other) => !RadialDistance.Equals(other.RadialDistance) && Azimuth.Equals(other.Azimuth) && Height.Equals(other.Height);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is CylindricalCoordinate other ? Equals(other) : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(RadialDistance, Azimuth, Height);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"RadialDistance\" = {RadialDistance}, \"Azimuth\" = {Azimuth}, \"Height\" = {Height} }}";

        // Explicit implementation of interfaces by forwarding properties to fields

        // Implemented concept functions and type functions

        // Unimplemented concept functions
    }
}
