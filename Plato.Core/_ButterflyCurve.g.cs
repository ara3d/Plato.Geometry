// Autogenerated file: DO NOT EDIT
// Created on 2025-03-09 8:08:08 PM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
public partial struct ButterflyCurve: IAngularCurve2D, IOpenShape
{
    // Fields

    // With functions 

    // Regular Constructor

    // Static factory function
    [MethodImpl(AggressiveInlining)] public static ButterflyCurve Create() => new ButterflyCurve();

    // Object virtual function overrides: Equals, GetHashCode, ToString
    [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is ButterflyCurve;
    [MethodImpl(AggressiveInlining)] public Boolean Equals(ButterflyCurve other) => true;
    [MethodImpl(AggressiveInlining)] public Boolean NotEquals(ButterflyCurve other) => false;
    [MethodImpl(AggressiveInlining)] public static Boolean operator==(ButterflyCurve a, ButterflyCurve b) => true;
    [MethodImpl(AggressiveInlining)] public static Boolean operator!=(ButterflyCurve a, ButterflyCurve b) => false;
    [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes();
    [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{  }}";

    // Explicit implementation of interfaces by forwarding properties to fields

    // Implemented concept functions and type functions
    [MethodImpl(AggressiveInlining)]  public Vector2 Eval(Angle t) => t.ButterflyCurve;
[MethodImpl(AggressiveInlining)]  public Vector2 Eval(Number t) => this.Eval(t.Turns);
[MethodImpl(AggressiveInlining)]  public IArray<Vector2> Sample(Integer numPoints){
    var _var221 = this;
    return numPoints.LinearSpace.Map((x) =>  => _var221.Eval(x);
;
}

[MethodImpl(AggressiveInlining)]  public PolyLine2D ToPolyLine2D(Integer numPoints) => (this.Sample(numPoints), this.Closed);
[MethodImpl(AggressiveInlining)]  public Procedural<Number, TR> Combine<TR>(ButterflyCurve b, System.Func<TR, TR, TR> f){
    var _var224 = b;
    {
        var _var223 = this;
        {
            var _var222 = f;
            return (x) =>  => _var222.Invoke(_var223.Eval(x), _var224.Eval(x));
;
        }
    }
}

[MethodImpl(AggressiveInlining)]  public Procedural<TR, Vector2> MapDomain<T0, TR>(System.Func<T0, TR> f){
    var _var226 = f;
    {
        var _var225 = this;
        return new Procedural<$TIn2,$TOut>((x) =>  => _var225.Eval(_var226.Invoke(x));
;
    }
}

public System.Func<Number, Vector2> Function { [MethodImpl(AggressiveInlining)] get {
    var _var227 = this;
    return (x) =>  => _var227.Eval(x);
;
}
 } 
[MethodImpl(AggressiveInlining)]  public Procedural<Number, Vector2> Compose(ButterflyCurve b){
    var _var229 = this;
    {
        var _var228 = b;
        return new Procedural<$TIn2,$TOut>((x) =>  => _var228.Eval(_var229.Eval(x));
;
    }
}

[MethodImpl(AggressiveInlining)]  public Procedural<Vector2, TR> Combine<TR>(ButterflyCurve b, System.Func<TR, TR, TR> f){
    var _var232 = b;
    {
        var _var231 = this;
        {
            var _var230 = f;
            return (x) =>  => _var230.Invoke(_var231.Eval(x), _var232.Eval(x));
;
        }
    }
}

[MethodImpl(AggressiveInlining)]  public Procedural<TR, Number> MapDomain<T0, TR>(System.Func<T0, TR> f){
    var _var234 = f;
    {
        var _var233 = this;
        return new Procedural<$TIn2,$TOut>((x) =>  => _var233.Eval(_var234.Invoke(x));
;
    }
}

public System.Func<Vector2, Number> Function { [MethodImpl(AggressiveInlining)] get {
    var _var235 = this;
    return (x) =>  => _var235.Eval(x);
;
}
 } 
[MethodImpl(AggressiveInlining)]  public Procedural<Vector2, Number> Compose(ButterflyCurve b){
    var _var237 = this;
    {
        var _var236 = b;
        return new Procedural<$TIn2,$TOut>((x) =>  => _var236.Eval(_var237.Eval(x));
;
    }
}

[MethodImpl(AggressiveInlining)]  public Procedural<Vector2, $TOut> Union(ButterflyCurve b) => this.Combine(b, (a, b) =>  => a.Max(b);

[MethodImpl(AggressiveInlining)]  public Procedural<Vector2, $TOut> Intersection(ButterflyCurve b) => this.Combine(b, (a, b) =>  => a.Min(b);

[MethodImpl(AggressiveInlining)]  public Procedural<Vector2, $TOut> Difference(ButterflyCurve b) => this.Combine(b, (a, b) =>  => a.Max(b.Negative);

public Procedural<Vector2, Number> Inverse { [MethodImpl(AggressiveInlining)] get  => this.Map((x) =>  => x.Negative;
 } 
[MethodImpl(AggressiveInlining)]  public Procedural<Vector2, Boolean> Threshold(Number threshold){
    var _var238 = threshold;
    return this.Map((x) =>  => x.GreaterThanOrEquals(_var238);
;
}

public Boolean Closed { [MethodImpl(AggressiveInlining)] get  => ((Boolean)false); } 

    // Unimplemented concept functions
    [MethodImpl(AggressiveInlining)]  public Number Distance(Vector2 p) => throw new NotImplementedException();
[MethodImpl(AggressiveInlining)]  public Number Eval(Vector2 t) => throw new NotImplementedException();
}
Plato.CSharpWriter.CSharpConcreteTypeWriter}
