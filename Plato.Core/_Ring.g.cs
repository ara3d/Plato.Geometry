// Autogenerated file: DO NOT EDIT
// Created on 2025-04-08 12:25:04 AM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct Ring: IClosedShape2D
    {
        // Fields
        [DataMember] public readonly Point2D Center;
        [DataMember] public readonly Number InnerRadius;
        [DataMember] public readonly Number OuterRadius;

        // With functions 
        [MethodImpl(AggressiveInlining)] public Ring WithCenter(Point2D center) => new Ring(center, InnerRadius, OuterRadius);
        [MethodImpl(AggressiveInlining)] public Ring WithInnerRadius(Number innerRadius) => new Ring(Center, innerRadius, OuterRadius);
        [MethodImpl(AggressiveInlining)] public Ring WithOuterRadius(Number outerRadius) => new Ring(Center, InnerRadius, outerRadius);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public Ring(Point2D center, Number innerRadius, Number outerRadius) { Center = center; InnerRadius = innerRadius; OuterRadius = outerRadius; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static Ring Create(Point2D center, Number innerRadius, Number outerRadius) => new Ring(center, innerRadius, outerRadius);

        // Static default implementation
        public static readonly Ring Default = default;

        // Implicit converters to/from value-tuples and deconstructor
        [MethodImpl(AggressiveInlining)] public static implicit operator (Point2D, Number, Number)(Ring self) => (self.Center, self.InnerRadius, self.OuterRadius);
        [MethodImpl(AggressiveInlining)] public static implicit operator Ring((Point2D, Number, Number) value) => new Ring(value.Item1, value.Item2, value.Item3);
        [MethodImpl(AggressiveInlining)] public void Deconstruct(out Point2D center, out Number innerRadius, out Number outerRadius) { center = Center; innerRadius = InnerRadius; outerRadius = OuterRadius;  }

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(Ring other) => Center.Equals(other.Center) && InnerRadius.Equals(other.InnerRadius) && OuterRadius.Equals(other.OuterRadius);
        [MethodImpl(AggressiveInlining)] public Boolean NotEquals(Ring other) => !Center.Equals(other.Center) && InnerRadius.Equals(other.InnerRadius) && OuterRadius.Equals(other.OuterRadius);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is Ring other ? Equals(other).Value : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(Center, InnerRadius, OuterRadius);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"Center\" = {Center}, \"InnerRadius\" = {InnerRadius}, \"OuterRadius\" = {OuterRadius} }}";

        // Explicit implementation of interfaces by forwarding properties to fields

        // Implemented interface functions
        public Boolean Closed { [MethodImpl(AggressiveInlining)] get  => ((Boolean)true); } 

        // Unimplemented interface functions
    }
}
