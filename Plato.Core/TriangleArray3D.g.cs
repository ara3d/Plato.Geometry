// Autogenerated file: DO NOT EDIT
// Created on 2025-01-29 8:54:01 AM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct TriangleArray3D: ITriangleArray3D<TriangleArray3D>
    {
        // Fields
        [DataMember] public readonly IArray<Triangle3D> Triangles;

        // With functions 
        [MethodImpl(AggressiveInlining)] public TriangleArray3D WithTriangles(IArray<Triangle3D> triangles) => new TriangleArray3D(triangles);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public TriangleArray3D(IArray<Triangle3D> triangles) { Triangles = triangles; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static TriangleArray3D Create(IArray<Triangle3D> triangles) => new TriangleArray3D(triangles);

        // Implicit converters to/from single field

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(TriangleArray3D other) => Triangles.Equals(other.Triangles);
        [MethodImpl(AggressiveInlining)] public Boolean NotEquals(TriangleArray3D other) => !Triangles.Equals(other.Triangles);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is TriangleArray3D other ? Equals(other) : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(Triangles);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"Triangles\" = {Triangles} }}";

        // Explicit implementation of interfaces by forwarding properties to fields
        IArray<Triangle3D> ITriangleGeometry3D<TriangleArray3D>.Triangles { [MethodImpl(AggressiveInlining)] get => Triangles; }

        // Implemented concept functions and type functions

        // Unimplemented concept functions
        public Integer PrimitiveSize => throw new NotImplementedException();
        public Integer NumPrimitives => throw new NotImplementedException();
        public IArray<Vector3> Points => throw new NotImplementedException();
        [MethodImpl(AggressiveInlining)]  public TriangleArray3D Deform(System.Func<Vector3, Vector3> f) => throw new NotImplementedException();
        public IArray<Integer> Indices => throw new NotImplementedException();
    }
}
