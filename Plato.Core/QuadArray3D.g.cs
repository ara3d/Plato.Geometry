// Autogenerated file: DO NOT EDIT
// Created on 2025-01-24 1:12:52 AM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct QuadArray3D: IQuadArray3D<QuadArray3D>
    {
        // Fields
        [DataMember] public readonly IArray<Quad3D> Quads;

        // With functions 
        [MethodImpl(AggressiveInlining)] public QuadArray3D WithQuads(IArray<Quad3D> quads) => new QuadArray3D(quads);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public QuadArray3D(IArray<Quad3D> quads) { Quads = quads; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static QuadArray3D Create(IArray<Quad3D> quads) => new QuadArray3D(quads);

        // Implicit converters to/from single field

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(QuadArray3D other) => Quads.Equals(other.Quads);
        [MethodImpl(AggressiveInlining)] public Boolean NotEquals(QuadArray3D other) => !Quads.Equals(other.Quads);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is QuadArray3D other ? Equals(other) : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(Quads);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"Quads\" = {Quads} }}";

        // Explicit implementation of interfaces by forwarding properties to fields
        IArray<Quad3D> IQuadGeometry3D<QuadArray3D>.Quads { [MethodImpl(AggressiveInlining)] get => Quads; }

        // Implemented concept functions and type functions

        // Unimplemented concept functions
        public Integer PrimitiveSize => throw new NotImplementedException();
        public Integer NumPrimitives => throw new NotImplementedException();
        public IArray<Vector3> Points => throw new NotImplementedException();
        [MethodImpl(AggressiveInlining)]  public QuadArray3D Deform(System.Func<Vector3, Vector3> f) => throw new NotImplementedException();
        public IArray<Integer> Indices => throw new NotImplementedException();
    }
}
