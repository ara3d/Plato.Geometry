// Autogenerated file: DO NOT EDIT
// Created on 2025-01-16 5:04:08 PM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct Frame3D: IValue<Frame3D>, ITransform3D<Frame3D>
    {
        // Fields
        [DataMember] public readonly Vector3 Forward;
        [DataMember] public readonly Vector3 Up;
        [DataMember] public readonly Vector3 Position;

        // With functions 
        [MethodImpl(AggressiveInlining)] public Frame3D WithForward(Vector3 forward) => new Frame3D(forward, Up, Position);
        [MethodImpl(AggressiveInlining)] public Frame3D WithUp(Vector3 up) => new Frame3D(Forward, up, Position);
        [MethodImpl(AggressiveInlining)] public Frame3D WithPosition(Vector3 position) => new Frame3D(Forward, Up, position);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public Frame3D(Vector3 forward, Vector3 up, Vector3 position) { Forward = forward; Up = up; Position = position; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static Frame3D Create(Vector3 forward, Vector3 up, Vector3 position) => new Frame3D(forward, up, position);

        // Implicit converters to/from value-tuples and deconstructor
        [MethodImpl(AggressiveInlining)] public static implicit operator (Vector3, Vector3, Vector3)(Frame3D self) => (self.Forward, self.Up, self.Position);
        [MethodImpl(AggressiveInlining)] public static implicit operator Frame3D((Vector3, Vector3, Vector3) value) => new(value.Item1, value.Item2, value.Item3);
        [MethodImpl(AggressiveInlining)] public void Deconstruct(out Vector3 forward, out Vector3 up, out Vector3 position) { forward = Forward; up = Up; position = Position;  }

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(Frame3D other) => Forward.Equals(other.Forward) && Up.Equals(other.Up) && Position.Equals(other.Position);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is Frame3D other ? Equals(other) : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(Forward, Up, Position);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"Forward\" = {Forward}, \"Up\" = {Up}, \"Position\" = {Position} }}";

        // Explicit implementation of interfaces by forwarding properties to fields

        // Implemented concept functions and type functions
        public Pose3D Pose3D { [MethodImpl(AggressiveInlining)] get  => (this.Position, this.Forward.LookRotation(this.Up)); } 
        [MethodImpl(AggressiveInlining)]  public static implicit operator Pose3D(Frame3D f) => f.Pose3D;
        [MethodImpl(AggressiveInlining)]  public Vector3 Transform(Vector3 v) => this.Pose3D.Transform(v);
        [MethodImpl(AggressiveInlining)]  public Vector3 TransformNormal(Vector3 v) => this.Pose3D.TransformNormal(v);
        public Matrix4x4 Matrix { [MethodImpl(AggressiveInlining)] get  => this.Pose3D.Matrix; } 
        [MethodImpl(AggressiveInlining)]  public IArray<Frame3D> Repeat(Integer n){
            var _var324 = this;
            return n.MapRange((i) => _var324);
        }

        public Matrix4x4 Matrix4x4 { [MethodImpl(AggressiveInlining)] get  => this.Matrix; } 
        [MethodImpl(AggressiveInlining)]  public static implicit operator Matrix4x4(Frame3D t) => t.Matrix4x4;

        // Unimplemented concept functions
        public Frame3D Invert => throw new NotImplementedException();
    }
}
