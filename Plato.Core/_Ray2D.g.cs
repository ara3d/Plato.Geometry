// Autogenerated file: DO NOT EDIT
// Created on 2025-03-09 8:08:08 PM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
public partial struct Ray2D: IValue
{
    // Fields
    [DataMember] public readonly Vector2 Origin;
    [DataMember] public readonly Vector2 Direction;

    // With functions 
    [MethodImpl(AggressiveInlining)] public Ray2D WithOrigin(Vector2 origin) => new Ray2D(origin, Direction);
    [MethodImpl(AggressiveInlining)] public Ray2D WithDirection(Vector2 direction) => new Ray2D(Origin, direction);

    // Regular Constructor
    [MethodImpl(AggressiveInlining)] public Ray2D(Vector2 origin, Vector2 direction) { Origin = origin; Direction = direction; }

    // Static factory function
    [MethodImpl(AggressiveInlining)] public static Ray2D Create(Vector2 origin, Vector2 direction) => new Ray2D(origin, direction);

    // Implicit converters to/from value-tuples and deconstructor
    [MethodImpl(AggressiveInlining)] public static implicit operator (Vector2, Vector2)(Ray2D self) => (self.Origin, self.Direction);
    [MethodImpl(AggressiveInlining)] public static implicit operator Ray2D((Vector2, Vector2) value) => new(value.Item1, value.Item2);
    [MethodImpl(AggressiveInlining)] public void Deconstruct(out Vector2 origin, out Vector2 direction) { origin = Origin; direction = Direction;  }

    // Object virtual function overrides: Equals, GetHashCode, ToString
    [MethodImpl(AggressiveInlining)] public Boolean Equals(Ray2D other) => Origin.Equals(other.Origin) && Direction.Equals(other.Direction);
    [MethodImpl(AggressiveInlining)] public Boolean NotEquals(Ray2D other) => !Origin.Equals(other.Origin) && Direction.Equals(other.Direction);
    [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is Ray2D other ? Equals(other) : false;
    [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(Origin, Direction);
    [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"Origin\" = {Origin}, \"Direction\" = {Direction} }}";

    // Explicit implementation of interfaces by forwarding properties to fields

    // Implemented concept functions and type functions
    public Ray3D To3D { [MethodImpl(AggressiveInlining)] get  => (this.Origin.To3D, this.Direction.To3D); } 
public Ray3D Ray3D { [MethodImpl(AggressiveInlining)] get  => this.To3D; } 
[MethodImpl(AggressiveInlining)]  public static implicit operator Ray3D(Ray2D x) => x.Ray3D;

    // Unimplemented concept functions
}
Plato.CSharpWriter.CSharpConcreteTypeWriter}
