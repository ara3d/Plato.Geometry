// Autogenerated file: DO NOT EDIT
// Created on 2025-04-07 4:05:19 PM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct QuadGrid2D: IQuadGrid2D<QuadGrid2D>
    {
        // Fields
        [DataMember] public readonly IArray2D<Point2D> PointGrid;
        [DataMember] public readonly Boolean ClosedX;
        [DataMember] public readonly Boolean ClosedY;

        // With functions 
        [MethodImpl(AggressiveInlining)] public QuadGrid2D WithPointGrid(IArray2D<Point2D> pointGrid) => new QuadGrid2D(pointGrid, ClosedX, ClosedY);
        [MethodImpl(AggressiveInlining)] public QuadGrid2D WithClosedX(Boolean closedX) => new QuadGrid2D(PointGrid, closedX, ClosedY);
        [MethodImpl(AggressiveInlining)] public QuadGrid2D WithClosedY(Boolean closedY) => new QuadGrid2D(PointGrid, ClosedX, closedY);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public QuadGrid2D(IArray2D<Point2D> pointGrid, Boolean closedX, Boolean closedY) { PointGrid = pointGrid; ClosedX = closedX; ClosedY = closedY; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static QuadGrid2D Create(IArray2D<Point2D> pointGrid, Boolean closedX, Boolean closedY) => new QuadGrid2D(pointGrid, closedX, closedY);

        // Static default implementation
        public static readonly QuadGrid2D Default = default;

        // Implicit converters to/from value-tuples and deconstructor
        [MethodImpl(AggressiveInlining)] public static implicit operator (IArray2D<Point2D>, Boolean, Boolean)(QuadGrid2D self) => (self.PointGrid, self.ClosedX, self.ClosedY);
        [MethodImpl(AggressiveInlining)] public static implicit operator QuadGrid2D((IArray2D<Point2D>, Boolean, Boolean) value) => new QuadGrid2D(value.Item1, value.Item2, value.Item3);
        [MethodImpl(AggressiveInlining)] public void Deconstruct(out IArray2D<Point2D> pointGrid, out Boolean closedX, out Boolean closedY) { pointGrid = PointGrid; closedX = ClosedX; closedY = ClosedY;  }

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(QuadGrid2D other) => PointGrid.Equals(other.PointGrid) && ClosedX.Equals(other.ClosedX) && ClosedY.Equals(other.ClosedY);
        [MethodImpl(AggressiveInlining)] public Boolean NotEquals(QuadGrid2D other) => !PointGrid.Equals(other.PointGrid) && ClosedX.Equals(other.ClosedX) && ClosedY.Equals(other.ClosedY);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is QuadGrid2D other ? Equals(other).Value : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(PointGrid, ClosedX, ClosedY);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"PointGrid\" = {PointGrid}, \"ClosedX\" = {ClosedX}, \"ClosedY\" = {ClosedY} }}";

        // Explicit implementation of interfaces by forwarding properties to fields
        IArray2D<Point2D> IQuadGrid2D<QuadGrid2D>.PointGrid { [MethodImpl(AggressiveInlining)] get => PointGrid; }

        // Implemented interface functions
        [MethodImpl(AggressiveInlining)]  public QuadGrid2D Deform(System.Func<Point2D, Point2D> f) => new QuadGrid2D(this.PointGrid.Map(f), this.ClosedX, this.ClosedY);
public IArray<Quad2D> Indices { [MethodImpl(AggressiveInlining)] get  => this.FaceIndices.FlatMap((fi)  => fi.Components); } 
public IArray<Quad2D> Faces { [MethodImpl(AggressiveInlining)] get  => this.Quads; } 
public IArray<Quad2D> Quads { [MethodImpl(AggressiveInlining)] get  => this.FaceIndices.Map((xs)  => new Quad2D(xs.At(((Integer)0)), xs.At(((Integer)1)), xs.At(((Integer)2)), xs.At(((Integer)3)))); } 
public Integer NumPrimitives { [MethodImpl(AggressiveInlining)] get  => this.Indices.Count.Divide(this.PrimitiveSize); } 
public Integer PrimitiveSize { [MethodImpl(AggressiveInlining)] get  => ((Integer)4); } 

        // Unimplemented interface functions
        public Bounds2D Bounds => throw new NotImplementedException();
public IArray<Integer> Indices => throw new NotImplementedException();
public IArray<Point2D> Points => throw new NotImplementedException();
public IArray<Quad2D> Primitives => throw new NotImplementedException();
}
}
