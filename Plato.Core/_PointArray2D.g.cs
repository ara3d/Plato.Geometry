// Autogenerated file: DO NOT EDIT
// Created on 2025-04-07 4:05:19 PM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct PointArray2D: IPointArray2D<PointArray2D>
    {
        // Fields
        [DataMember] public readonly IArray<Point2D> Points;

        // With functions 
        [MethodImpl(AggressiveInlining)] public PointArray2D WithPoints(IArray<Point2D> points) => new PointArray2D(points);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public PointArray2D(IArray<Point2D> points) { Points = points; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static PointArray2D Create(IArray<Point2D> points) => new PointArray2D(points);

        // Static default implementation
        public static readonly PointArray2D Default = default;

        // Implicit converters to/from single field

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(PointArray2D other) => Points.Equals(other.Points);
        [MethodImpl(AggressiveInlining)] public Boolean NotEquals(PointArray2D other) => !Points.Equals(other.Points);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is PointArray2D other ? Equals(other).Value : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(Points);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"Points\" = {Points} }}";

        // Explicit implementation of interfaces by forwarding properties to fields
        IArray<Point2D> IPointGeometry2D<PointArray2D>.Points { [MethodImpl(AggressiveInlining)] get => Points; }

        // Implemented interface functions
        [MethodImpl(AggressiveInlining)]  public PointArray2D Deform(System.Func<Point2D, Point2D> f) => new PointArray2D(this.Points.Map(f));
public IArray<Integer> Indices { [MethodImpl(AggressiveInlining)] get  => this.Points.Indices; } 

        // Unimplemented interface functions
        public Bounds2D Bounds => throw new NotImplementedException();
}
}
