// Autogenerated file: DO NOT EDIT
// Created on 2025-04-07 4:05:19 PM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct Scale2D: ITransform2D
    {
        // Fields
        [DataMember] public readonly Vector2 Amount;

        // With functions 
        [MethodImpl(AggressiveInlining)] public Scale2D WithAmount(Vector2 amount) => new Scale2D(amount);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public Scale2D(Vector2 amount) { Amount = amount; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static Scale2D Create(Vector2 amount) => new Scale2D(amount);

        // Static default implementation
        public static readonly Scale2D Default = default;

        // Implicit converters to/from single field
        [MethodImpl(AggressiveInlining)] public static implicit operator Vector2(Scale2D self) => self.Amount;
        [MethodImpl(AggressiveInlining)] public static implicit operator Scale2D(Vector2 value) => new Scale2D(value);

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(Scale2D other) => Amount.Equals(other.Amount);
        [MethodImpl(AggressiveInlining)] public Boolean NotEquals(Scale2D other) => !Amount.Equals(other.Amount);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is Scale2D other ? Equals(other).Value : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(Amount);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"Amount\" = {Amount} }}";

        // Explicit implementation of interfaces by forwarding properties to fields

        // Implemented interface functions

        // Unimplemented interface functions
        public Matrix3x2 Matrix => throw new NotImplementedException();
}
}
