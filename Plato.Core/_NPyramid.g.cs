// Autogenerated file: DO NOT EDIT
// Created on 2025-03-18 2:15:23 PM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct NPyramid: ISolid
    {
        // Fields
        [DataMember] public readonly Number Height;
        [DataMember] public readonly Number Radius;
        [DataMember] public readonly Integer NumSides;

        // With functions 
        [MethodImpl(AggressiveInlining)] public NPyramid WithHeight(Number height) => new NPyramid(height, Radius, NumSides);
        [MethodImpl(AggressiveInlining)] public NPyramid WithRadius(Number radius) => new NPyramid(Height, radius, NumSides);
        [MethodImpl(AggressiveInlining)] public NPyramid WithNumSides(Integer numSides) => new NPyramid(Height, Radius, numSides);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public NPyramid(Number height, Number radius, Integer numSides) { Height = height; Radius = radius; NumSides = numSides; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static NPyramid Create(Number height, Number radius, Integer numSides) => new NPyramid(height, radius, numSides);

        // Implicit converters to/from value-tuples and deconstructor
        [MethodImpl(AggressiveInlining)] public static implicit operator (Number, Number, Integer)(NPyramid self) => (self.Height, self.Radius, self.NumSides);
        [MethodImpl(AggressiveInlining)] public static implicit operator NPyramid((Number, Number, Integer) value) => new(value.Item1, value.Item2, value.Item3);
        [MethodImpl(AggressiveInlining)] public void Deconstruct(out Number height, out Number radius, out Integer numSides) { height = Height; radius = Radius; numSides = NumSides;  }

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(NPyramid other) => Height.Equals(other.Height) && Radius.Equals(other.Radius) && NumSides.Equals(other.NumSides);
        [MethodImpl(AggressiveInlining)] public Boolean NotEquals(NPyramid other) => !Height.Equals(other.Height) && Radius.Equals(other.Radius) && NumSides.Equals(other.NumSides);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is NPyramid other ? Equals(other) : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(Height, Radius, NumSides);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"Height\" = {Height}, \"Radius\" = {Radius}, \"NumSides\" = {NumSides} }}";

        // Explicit implementation of interfaces by forwarding properties to fields

        // Implemented interface functions
        public Boolean ClosedX { [MethodImpl(AggressiveInlining)] get  => ((Boolean)true); } 
public Boolean ClosedY { [MethodImpl(AggressiveInlining)] get  => ((Boolean)true); } 

        // Unimplemented concept functions
        [MethodImpl(AggressiveInlining)]  public Vector3 Eval(Vector2 t) => throw new NotImplementedException();
}
}
