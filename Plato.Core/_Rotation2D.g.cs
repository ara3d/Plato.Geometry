// Autogenerated file: DO NOT EDIT
// Created on 2025-04-08 12:25:04 AM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct Rotation2D: IRigidTransform2D
    {
        // Fields
        [DataMember] public readonly Angle Angle;

        // With functions 
        [MethodImpl(AggressiveInlining)] public Rotation2D WithAngle(Angle angle) => new Rotation2D(angle);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public Rotation2D(Angle angle) { Angle = angle; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static Rotation2D Create(Angle angle) => new Rotation2D(angle);

        // Static default implementation
        public static readonly Rotation2D Default = default;

        // Implicit converters to/from single field
        [MethodImpl(AggressiveInlining)] public static implicit operator Angle(Rotation2D self) => self.Angle;
        [MethodImpl(AggressiveInlining)] public static implicit operator Rotation2D(Angle value) => new Rotation2D(value);

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(Rotation2D other) => Angle.Equals(other.Angle);
        [MethodImpl(AggressiveInlining)] public Boolean NotEquals(Rotation2D other) => !Angle.Equals(other.Angle);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is Rotation2D other ? Equals(other).Value : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(Angle);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"Angle\" = {Angle} }}";

        // Explicit implementation of interfaces by forwarding properties to fields

        // Implemented interface functions

        // Unimplemented interface functions
        public Matrix3x2 Matrix => throw new NotImplementedException();
}
}
