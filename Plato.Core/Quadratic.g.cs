// Autogenerated file: DO NOT EDIT
// Created on 2025-01-24 1:12:52 AM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct Quadratic: IRealFunction
    {
        // Fields
        [DataMember] public readonly Number A;
        [DataMember] public readonly Number B;
        [DataMember] public readonly Number C;

        // With functions 
        [MethodImpl(AggressiveInlining)] public Quadratic WithA(Number a) => new Quadratic(a, B, C);
        [MethodImpl(AggressiveInlining)] public Quadratic WithB(Number b) => new Quadratic(A, b, C);
        [MethodImpl(AggressiveInlining)] public Quadratic WithC(Number c) => new Quadratic(A, B, c);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public Quadratic(Number a, Number b, Number c) { A = a; B = b; C = c; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static Quadratic Create(Number a, Number b, Number c) => new Quadratic(a, b, c);

        // Implicit converters to/from value-tuples and deconstructor
        [MethodImpl(AggressiveInlining)] public static implicit operator (Number, Number, Number)(Quadratic self) => (self.A, self.B, self.C);
        [MethodImpl(AggressiveInlining)] public static implicit operator Quadratic((Number, Number, Number) value) => new(value.Item1, value.Item2, value.Item3);
        [MethodImpl(AggressiveInlining)] public void Deconstruct(out Number a, out Number b, out Number c) { a = A; b = B; c = C;  }

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(Quadratic other) => A.Equals(other.A) && B.Equals(other.B) && C.Equals(other.C);
        [MethodImpl(AggressiveInlining)] public Boolean NotEquals(Quadratic other) => !A.Equals(other.A) && B.Equals(other.B) && C.Equals(other.C);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is Quadratic other ? Equals(other) : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(A, B, C);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"A\" = {A}, \"B\" = {B}, \"C\" = {C} }}";

        // Explicit implementation of interfaces by forwarding properties to fields

        // Implemented concept functions and type functions
        [MethodImpl(AggressiveInlining)]  public Number Eval(Number x) => x.Quadratic(this.A, this.B, this.C);

        // Unimplemented concept functions
    }
}
