// Autogenerated file: DO NOT EDIT
// Created on 2025-04-08 12:25:04 AM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct OffsetRotation2D: IRigidTransform2D
    {
        // Fields
        [DataMember] public readonly Angle Angle;
        [DataMember] public readonly Point2D Center;

        // With functions 
        [MethodImpl(AggressiveInlining)] public OffsetRotation2D WithAngle(Angle angle) => new OffsetRotation2D(angle, Center);
        [MethodImpl(AggressiveInlining)] public OffsetRotation2D WithCenter(Point2D center) => new OffsetRotation2D(Angle, center);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public OffsetRotation2D(Angle angle, Point2D center) { Angle = angle; Center = center; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static OffsetRotation2D Create(Angle angle, Point2D center) => new OffsetRotation2D(angle, center);

        // Static default implementation
        public static readonly OffsetRotation2D Default = default;

        // Implicit converters to/from value-tuples and deconstructor
        [MethodImpl(AggressiveInlining)] public static implicit operator (Angle, Point2D)(OffsetRotation2D self) => (self.Angle, self.Center);
        [MethodImpl(AggressiveInlining)] public static implicit operator OffsetRotation2D((Angle, Point2D) value) => new OffsetRotation2D(value.Item1, value.Item2);
        [MethodImpl(AggressiveInlining)] public void Deconstruct(out Angle angle, out Point2D center) { angle = Angle; center = Center;  }

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(OffsetRotation2D other) => Angle.Equals(other.Angle) && Center.Equals(other.Center);
        [MethodImpl(AggressiveInlining)] public Boolean NotEquals(OffsetRotation2D other) => !Angle.Equals(other.Angle) && Center.Equals(other.Center);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is OffsetRotation2D other ? Equals(other).Value : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(Angle, Center);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"Angle\" = {Angle}, \"Center\" = {Center} }}";

        // Explicit implementation of interfaces by forwarding properties to fields

        // Implemented interface functions

        // Unimplemented interface functions
        public Matrix3x2 Matrix => throw new NotImplementedException();
}
}
