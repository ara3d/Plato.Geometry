// Autogenerated file: DO NOT EDIT
// Created on 2025-01-17 3:12:39 PM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct ColorLUV: ICoordinate<ColorLUV>
    {
        // Fields
        [DataMember] public readonly Unit Lightness;
        [DataMember] public readonly Unit U;
        [DataMember] public readonly Unit V;

        // With functions 
        [MethodImpl(AggressiveInlining)] public ColorLUV WithLightness(Unit lightness) => new ColorLUV(lightness, U, V);
        [MethodImpl(AggressiveInlining)] public ColorLUV WithU(Unit u) => new ColorLUV(Lightness, u, V);
        [MethodImpl(AggressiveInlining)] public ColorLUV WithV(Unit v) => new ColorLUV(Lightness, U, v);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public ColorLUV(Unit lightness, Unit u, Unit v) { Lightness = lightness; U = u; V = v; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static ColorLUV Create(Unit lightness, Unit u, Unit v) => new ColorLUV(lightness, u, v);

        // Implicit converters to/from value-tuples and deconstructor
        [MethodImpl(AggressiveInlining)] public static implicit operator (Unit, Unit, Unit)(ColorLUV self) => (self.Lightness, self.U, self.V);
        [MethodImpl(AggressiveInlining)] public static implicit operator ColorLUV((Unit, Unit, Unit) value) => new(value.Item1, value.Item2, value.Item3);
        [MethodImpl(AggressiveInlining)] public void Deconstruct(out Unit lightness, out Unit u, out Unit v) { lightness = Lightness; u = U; v = V;  }

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(ColorLUV other) => Lightness.Equals(other.Lightness) && U.Equals(other.U) && V.Equals(other.V);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is ColorLUV other ? Equals(other) : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(Lightness, U, V);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"Lightness\" = {Lightness}, \"U\" = {U}, \"V\" = {V} }}";

        // Explicit implementation of interfaces by forwarding properties to fields

        // Implemented concept functions and type functions
        [MethodImpl(AggressiveInlining)]  public IArray<ColorLUV> Repeat(Integer n){
            var _var32 = this;
            return n.MapRange((i) => _var32);
        }


        // Unimplemented concept functions
    }
}
