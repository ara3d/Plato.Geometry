// Autogenerated file: DO NOT EDIT
// Created on 2025-01-29 8:54:01 AM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct ColorLUV: ICoordinate
    {
        // Fields
        [DataMember] public readonly Number Lightness;
        [DataMember] public readonly Number U;
        [DataMember] public readonly Number V;

        // With functions 
        [MethodImpl(AggressiveInlining)] public ColorLUV WithLightness(Number lightness) => new ColorLUV(lightness, U, V);
        [MethodImpl(AggressiveInlining)] public ColorLUV WithU(Number u) => new ColorLUV(Lightness, u, V);
        [MethodImpl(AggressiveInlining)] public ColorLUV WithV(Number v) => new ColorLUV(Lightness, U, v);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public ColorLUV(Number lightness, Number u, Number v) { Lightness = lightness; U = u; V = v; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static ColorLUV Create(Number lightness, Number u, Number v) => new ColorLUV(lightness, u, v);

        // Implicit converters to/from value-tuples and deconstructor
        [MethodImpl(AggressiveInlining)] public static implicit operator (Number, Number, Number)(ColorLUV self) => (self.Lightness, self.U, self.V);
        [MethodImpl(AggressiveInlining)] public static implicit operator ColorLUV((Number, Number, Number) value) => new(value.Item1, value.Item2, value.Item3);
        [MethodImpl(AggressiveInlining)] public void Deconstruct(out Number lightness, out Number u, out Number v) { lightness = Lightness; u = U; v = V;  }

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(ColorLUV other) => Lightness.Equals(other.Lightness) && U.Equals(other.U) && V.Equals(other.V);
        [MethodImpl(AggressiveInlining)] public Boolean NotEquals(ColorLUV other) => !Lightness.Equals(other.Lightness) && U.Equals(other.U) && V.Equals(other.V);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is ColorLUV other ? Equals(other) : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(Lightness, U, V);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"Lightness\" = {Lightness}, \"U\" = {U}, \"V\" = {V} }}";

        // Explicit implementation of interfaces by forwarding properties to fields

        // Implemented concept functions and type functions

        // Unimplemented concept functions
    }
}
