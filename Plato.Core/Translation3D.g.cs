// Autogenerated file: DO NOT EDIT
// Created on 2025-01-17 3:12:39 PM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct Translation3D: ITransform3D
    {
        // Fields
        [DataMember] public readonly Vector3 Translation;

        // With functions 
        [MethodImpl(AggressiveInlining)] public Translation3D WithTranslation(Vector3 translation) => new Translation3D(translation);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public Translation3D(Vector3 translation) { Translation = translation; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static Translation3D Create(Vector3 translation) => new Translation3D(translation);

        // Implicit converters to/from single field
        [MethodImpl(AggressiveInlining)] public static implicit operator Vector3(Translation3D self) => self.Translation;
        [MethodImpl(AggressiveInlining)] public static implicit operator Translation3D(Vector3 value) => new Translation3D(value);

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(Translation3D other) => Translation.Equals(other.Translation);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is Translation3D other ? Equals(other) : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(Translation);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"Translation\" = {Translation} }}";

        // Explicit implementation of interfaces by forwarding properties to fields

        // Implemented concept functions and type functions
        public Matrix4x4 Matrix { [MethodImpl(AggressiveInlining)] get  => Matrix4x4.CreateTranslation(this.Translation); } 
        [MethodImpl(AggressiveInlining)]  public Vector3 Transform(Vector3 v) => v.Add(this.Translation);
        [MethodImpl(AggressiveInlining)]  public Vector3 TransformNormal(Vector3 v) => v;
        public Matrix4x4 Matrix4x4 { [MethodImpl(AggressiveInlining)] get  => this.Matrix; } 
        [MethodImpl(AggressiveInlining)]  public static implicit operator Matrix4x4(Translation3D t) => t.Matrix4x4;
        public Translation3D Inverse { [MethodImpl(AggressiveInlining)] get  => new Any(MatrixTransform3D, this.Matrix.Invert); } 

        // Unimplemented concept functions
    }
}
