// Autogenerated file: DO NOT EDIT
// Created on 2025-03-09 11:25:56 AM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct ColorLCh: ICoordinate
    {
        // Fields
        [DataMember] public readonly Number Lightness;
        [DataMember] public readonly PolarCoordinate ChromaHue;

        // With functions 
        [MethodImpl(AggressiveInlining)] public ColorLCh WithLightness(Number lightness) => new ColorLCh(lightness, ChromaHue);
        [MethodImpl(AggressiveInlining)] public ColorLCh WithChromaHue(PolarCoordinate chromaHue) => new ColorLCh(Lightness, chromaHue);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public ColorLCh(Number lightness, PolarCoordinate chromaHue) { Lightness = lightness; ChromaHue = chromaHue; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static ColorLCh Create(Number lightness, PolarCoordinate chromaHue) => new ColorLCh(lightness, chromaHue);

        // Implicit converters to/from value-tuples and deconstructor
        [MethodImpl(AggressiveInlining)] public static implicit operator (Number, PolarCoordinate)(ColorLCh self) => (self.Lightness, self.ChromaHue);
        [MethodImpl(AggressiveInlining)] public static implicit operator ColorLCh((Number, PolarCoordinate) value) => new(value.Item1, value.Item2);
        [MethodImpl(AggressiveInlining)] public void Deconstruct(out Number lightness, out PolarCoordinate chromaHue) { lightness = Lightness; chromaHue = ChromaHue;  }

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(ColorLCh other) => Lightness.Equals(other.Lightness) && ChromaHue.Equals(other.ChromaHue);
        [MethodImpl(AggressiveInlining)] public Boolean NotEquals(ColorLCh other) => !Lightness.Equals(other.Lightness) && ChromaHue.Equals(other.ChromaHue);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is ColorLCh other ? Equals(other) : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(Lightness, ChromaHue);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"Lightness\" = {Lightness}, \"ChromaHue\" = {ChromaHue} }}";

        // Explicit implementation of interfaces by forwarding properties to fields

        // Implemented concept functions and type functions

        // Unimplemented concept functions
    }
}
