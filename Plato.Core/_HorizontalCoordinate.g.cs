// Autogenerated file: DO NOT EDIT
// Created on 2025-04-08 12:25:04 AM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct HorizontalCoordinate: ICoordinate
    {
        // Fields
        [DataMember] public readonly Angle Altitude;
        [DataMember] public readonly Angle Azimuth;

        // With functions 
        [MethodImpl(AggressiveInlining)] public HorizontalCoordinate WithAltitude(Angle altitude) => new HorizontalCoordinate(altitude, Azimuth);
        [MethodImpl(AggressiveInlining)] public HorizontalCoordinate WithAzimuth(Angle azimuth) => new HorizontalCoordinate(Altitude, azimuth);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public HorizontalCoordinate(Angle altitude, Angle azimuth) { Altitude = altitude; Azimuth = azimuth; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static HorizontalCoordinate Create(Angle altitude, Angle azimuth) => new HorizontalCoordinate(altitude, azimuth);

        // Static default implementation
        public static readonly HorizontalCoordinate Default = default;

        // Implicit converters to/from value-tuples and deconstructor
        [MethodImpl(AggressiveInlining)] public static implicit operator (Angle, Angle)(HorizontalCoordinate self) => (self.Altitude, self.Azimuth);
        [MethodImpl(AggressiveInlining)] public static implicit operator HorizontalCoordinate((Angle, Angle) value) => new HorizontalCoordinate(value.Item1, value.Item2);
        [MethodImpl(AggressiveInlining)] public void Deconstruct(out Angle altitude, out Angle azimuth) { altitude = Altitude; azimuth = Azimuth;  }

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(HorizontalCoordinate other) => Altitude.Equals(other.Altitude) && Azimuth.Equals(other.Azimuth);
        [MethodImpl(AggressiveInlining)] public Boolean NotEquals(HorizontalCoordinate other) => !Altitude.Equals(other.Altitude) && Azimuth.Equals(other.Azimuth);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is HorizontalCoordinate other ? Equals(other).Value : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(Altitude, Azimuth);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"Altitude\" = {Altitude}, \"Azimuth\" = {Azimuth} }}";

        // Explicit implementation of interfaces by forwarding properties to fields

        // Implemented interface functions

        // Unimplemented interface functions
    }
}
