// Autogenerated file: DO NOT EDIT
// Created on 2025-04-07 4:05:19 PM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct Skew2D: ITransform2D
    {
        // Fields
        [DataMember] public readonly Angle x;
        [DataMember] public readonly Angle y;

        // With functions 
        [MethodImpl(AggressiveInlining)] public Skew2D Withx(Angle _x) => new Skew2D(_x, y);
        [MethodImpl(AggressiveInlining)] public Skew2D Withy(Angle _y) => new Skew2D(x, _y);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public Skew2D(Angle _x, Angle _y) { x = _x; y = _y; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static Skew2D Create(Angle _x, Angle _y) => new Skew2D(_x, _y);

        // Static default implementation
        public static readonly Skew2D Default = default;

        // Implicit converters to/from value-tuples and deconstructor
        [MethodImpl(AggressiveInlining)] public static implicit operator (Angle, Angle)(Skew2D self) => (self.x, self.y);
        [MethodImpl(AggressiveInlining)] public static implicit operator Skew2D((Angle, Angle) value) => new Skew2D(value.Item1, value.Item2);
        [MethodImpl(AggressiveInlining)] public void Deconstruct(out Angle _x, out Angle _y) { _x = x; _y = y;  }

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(Skew2D other) => x.Equals(other.x) && y.Equals(other.y);
        [MethodImpl(AggressiveInlining)] public Boolean NotEquals(Skew2D other) => !x.Equals(other.x) && y.Equals(other.y);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is Skew2D other ? Equals(other).Value : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(x, y);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"x\" = {x}, \"y\" = {y} }}";

        // Explicit implementation of interfaces by forwarding properties to fields

        // Implemented interface functions

        // Unimplemented interface functions
        public Matrix3x2 Matrix => throw new NotImplementedException();
}
}
