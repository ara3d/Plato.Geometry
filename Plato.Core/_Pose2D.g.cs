// Autogenerated file: DO NOT EDIT
// Created on 2025-03-09 8:08:08 PM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
public partial struct Pose2D: IValue
{
    // Fields
    [DataMember] public readonly Vector2 Position;
    [DataMember] public readonly Angle Rotation;

    // With functions 
    [MethodImpl(AggressiveInlining)] public Pose2D WithPosition(Vector2 position) => new Pose2D(position, Rotation);
    [MethodImpl(AggressiveInlining)] public Pose2D WithRotation(Angle rotation) => new Pose2D(Position, rotation);

    // Regular Constructor
    [MethodImpl(AggressiveInlining)] public Pose2D(Vector2 position, Angle rotation) { Position = position; Rotation = rotation; }

    // Static factory function
    [MethodImpl(AggressiveInlining)] public static Pose2D Create(Vector2 position, Angle rotation) => new Pose2D(position, rotation);

    // Implicit converters to/from value-tuples and deconstructor
    [MethodImpl(AggressiveInlining)] public static implicit operator (Vector2, Angle)(Pose2D self) => (self.Position, self.Rotation);
    [MethodImpl(AggressiveInlining)] public static implicit operator Pose2D((Vector2, Angle) value) => new(value.Item1, value.Item2);
    [MethodImpl(AggressiveInlining)] public void Deconstruct(out Vector2 position, out Angle rotation) { position = Position; rotation = Rotation;  }

    // Object virtual function overrides: Equals, GetHashCode, ToString
    [MethodImpl(AggressiveInlining)] public Boolean Equals(Pose2D other) => Position.Equals(other.Position) && Rotation.Equals(other.Rotation);
    [MethodImpl(AggressiveInlining)] public Boolean NotEquals(Pose2D other) => !Position.Equals(other.Position) && Rotation.Equals(other.Rotation);
    [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is Pose2D other ? Equals(other) : false;
    [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(Position, Rotation);
    [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"Position\" = {Position}, \"Rotation\" = {Rotation} }}";

    // Explicit implementation of interfaces by forwarding properties to fields

    // Implemented concept functions and type functions

    // Unimplemented concept functions
}
Plato.CSharpWriter.CSharpConcreteTypeWriter}
