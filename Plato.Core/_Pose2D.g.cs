// Autogenerated file: DO NOT EDIT
// Created on 2025-04-08 12:25:04 AM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct Pose2D: IRigidTransform2D
    {
        // Fields
        [DataMember] public readonly Translation2D Translation;
        [DataMember] public readonly Rotation2D Rotation;

        // With functions 
        [MethodImpl(AggressiveInlining)] public Pose2D WithTranslation(Translation2D translation) => new Pose2D(translation, Rotation);
        [MethodImpl(AggressiveInlining)] public Pose2D WithRotation(Rotation2D rotation) => new Pose2D(Translation, rotation);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public Pose2D(Translation2D translation, Rotation2D rotation) { Translation = translation; Rotation = rotation; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static Pose2D Create(Translation2D translation, Rotation2D rotation) => new Pose2D(translation, rotation);

        // Static default implementation
        public static readonly Pose2D Default = default;

        // Implicit converters to/from value-tuples and deconstructor
        [MethodImpl(AggressiveInlining)] public static implicit operator (Translation2D, Rotation2D)(Pose2D self) => (self.Translation, self.Rotation);
        [MethodImpl(AggressiveInlining)] public static implicit operator Pose2D((Translation2D, Rotation2D) value) => new Pose2D(value.Item1, value.Item2);
        [MethodImpl(AggressiveInlining)] public void Deconstruct(out Translation2D translation, out Rotation2D rotation) { translation = Translation; rotation = Rotation;  }

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(Pose2D other) => Translation.Equals(other.Translation) && Rotation.Equals(other.Rotation);
        [MethodImpl(AggressiveInlining)] public Boolean NotEquals(Pose2D other) => !Translation.Equals(other.Translation) && Rotation.Equals(other.Rotation);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is Pose2D other ? Equals(other).Value : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(Translation, Rotation);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"Translation\" = {Translation}, \"Rotation\" = {Rotation} }}";

        // Explicit implementation of interfaces by forwarding properties to fields

        // Implemented interface functions

        // Unimplemented interface functions
        public Matrix3x2 Matrix => throw new NotImplementedException();
}
}
