// Autogenerated file: DO NOT EDIT
// Created on 2025-01-24 1:12:52 AM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct LinearEquation: IRealFunction
    {
        // Fields
        [DataMember] public readonly Number Slope;
        [DataMember] public readonly Number YIntercept;

        // With functions 
        [MethodImpl(AggressiveInlining)] public LinearEquation WithSlope(Number slope) => new LinearEquation(slope, YIntercept);
        [MethodImpl(AggressiveInlining)] public LinearEquation WithYIntercept(Number yIntercept) => new LinearEquation(Slope, yIntercept);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public LinearEquation(Number slope, Number yIntercept) { Slope = slope; YIntercept = yIntercept; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static LinearEquation Create(Number slope, Number yIntercept) => new LinearEquation(slope, yIntercept);

        // Implicit converters to/from value-tuples and deconstructor
        [MethodImpl(AggressiveInlining)] public static implicit operator (Number, Number)(LinearEquation self) => (self.Slope, self.YIntercept);
        [MethodImpl(AggressiveInlining)] public static implicit operator LinearEquation((Number, Number) value) => new(value.Item1, value.Item2);
        [MethodImpl(AggressiveInlining)] public void Deconstruct(out Number slope, out Number yIntercept) { slope = Slope; yIntercept = YIntercept;  }

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(LinearEquation other) => Slope.Equals(other.Slope) && YIntercept.Equals(other.YIntercept);
        [MethodImpl(AggressiveInlining)] public Boolean NotEquals(LinearEquation other) => !Slope.Equals(other.Slope) && YIntercept.Equals(other.YIntercept);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is LinearEquation other ? Equals(other) : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(Slope, YIntercept);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"Slope\" = {Slope}, \"YIntercept\" = {YIntercept} }}";

        // Explicit implementation of interfaces by forwarding properties to fields

        // Implemented concept functions and type functions
        [MethodImpl(AggressiveInlining)]  public Number Eval(Number x) => x.Linear(this.Slope, this.YIntercept);

        // Unimplemented concept functions
    }
}
