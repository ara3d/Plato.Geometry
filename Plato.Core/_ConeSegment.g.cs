// Autogenerated file: DO NOT EDIT
// Created on 2025-03-18 2:15:23 PM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct ConeSegment: ISolid
    {
        // Fields
        [DataMember] public readonly Number Height;
        [DataMember] public readonly Number Radius1;
        [DataMember] public readonly Number Radius2;

        // With functions 
        [MethodImpl(AggressiveInlining)] public ConeSegment WithHeight(Number height) => new ConeSegment(height, Radius1, Radius2);
        [MethodImpl(AggressiveInlining)] public ConeSegment WithRadius1(Number radius1) => new ConeSegment(Height, radius1, Radius2);
        [MethodImpl(AggressiveInlining)] public ConeSegment WithRadius2(Number radius2) => new ConeSegment(Height, Radius1, radius2);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public ConeSegment(Number height, Number radius1, Number radius2) { Height = height; Radius1 = radius1; Radius2 = radius2; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static ConeSegment Create(Number height, Number radius1, Number radius2) => new ConeSegment(height, radius1, radius2);

        // Implicit converters to/from value-tuples and deconstructor
        [MethodImpl(AggressiveInlining)] public static implicit operator (Number, Number, Number)(ConeSegment self) => (self.Height, self.Radius1, self.Radius2);
        [MethodImpl(AggressiveInlining)] public static implicit operator ConeSegment((Number, Number, Number) value) => new(value.Item1, value.Item2, value.Item3);
        [MethodImpl(AggressiveInlining)] public void Deconstruct(out Number height, out Number radius1, out Number radius2) { height = Height; radius1 = Radius1; radius2 = Radius2;  }

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(ConeSegment other) => Height.Equals(other.Height) && Radius1.Equals(other.Radius1) && Radius2.Equals(other.Radius2);
        [MethodImpl(AggressiveInlining)] public Boolean NotEquals(ConeSegment other) => !Height.Equals(other.Height) && Radius1.Equals(other.Radius1) && Radius2.Equals(other.Radius2);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is ConeSegment other ? Equals(other) : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(Height, Radius1, Radius2);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"Height\" = {Height}, \"Radius1\" = {Radius1}, \"Radius2\" = {Radius2} }}";

        // Explicit implementation of interfaces by forwarding properties to fields

        // Implemented interface functions
        public Boolean ClosedX { [MethodImpl(AggressiveInlining)] get  => ((Boolean)true); } 
public Boolean ClosedY { [MethodImpl(AggressiveInlining)] get  => ((Boolean)true); } 

        // Unimplemented concept functions
        [MethodImpl(AggressiveInlining)]  public Vector3 Eval(Vector2 t) => throw new NotImplementedException();
}
}
