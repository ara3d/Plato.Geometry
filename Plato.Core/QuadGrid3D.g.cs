// Autogenerated file: DO NOT EDIT
// Created on 2025-01-24 1:12:52 AM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct QuadGrid3D: IQuadGrid3D<QuadGrid3D>
    {
        // Fields
        [DataMember] public readonly IArray2D<Vector3> PointGrid;
        [DataMember] public readonly Boolean ClosedX;
        [DataMember] public readonly Boolean ClosedY;

        // With functions 
        [MethodImpl(AggressiveInlining)] public QuadGrid3D WithPointGrid(IArray2D<Vector3> pointGrid) => new QuadGrid3D(pointGrid, ClosedX, ClosedY);
        [MethodImpl(AggressiveInlining)] public QuadGrid3D WithClosedX(Boolean closedX) => new QuadGrid3D(PointGrid, closedX, ClosedY);
        [MethodImpl(AggressiveInlining)] public QuadGrid3D WithClosedY(Boolean closedY) => new QuadGrid3D(PointGrid, ClosedX, closedY);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public QuadGrid3D(IArray2D<Vector3> pointGrid, Boolean closedX, Boolean closedY) { PointGrid = pointGrid; ClosedX = closedX; ClosedY = closedY; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static QuadGrid3D Create(IArray2D<Vector3> pointGrid, Boolean closedX, Boolean closedY) => new QuadGrid3D(pointGrid, closedX, closedY);

        // Implicit converters to/from value-tuples and deconstructor
        [MethodImpl(AggressiveInlining)] public static implicit operator (IArray2D<Vector3>, Boolean, Boolean)(QuadGrid3D self) => (self.PointGrid, self.ClosedX, self.ClosedY);
        [MethodImpl(AggressiveInlining)] public static implicit operator QuadGrid3D((IArray2D<Vector3>, Boolean, Boolean) value) => new(value.Item1, value.Item2, value.Item3);
        [MethodImpl(AggressiveInlining)] public void Deconstruct(out IArray2D<Vector3> pointGrid, out Boolean closedX, out Boolean closedY) { pointGrid = PointGrid; closedX = ClosedX; closedY = ClosedY;  }

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(QuadGrid3D other) => PointGrid.Equals(other.PointGrid) && ClosedX.Equals(other.ClosedX) && ClosedY.Equals(other.ClosedY);
        [MethodImpl(AggressiveInlining)] public Boolean NotEquals(QuadGrid3D other) => !PointGrid.Equals(other.PointGrid) && ClosedX.Equals(other.ClosedX) && ClosedY.Equals(other.ClosedY);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is QuadGrid3D other ? Equals(other) : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(PointGrid, ClosedX, ClosedY);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"PointGrid\" = {PointGrid}, \"ClosedX\" = {ClosedX}, \"ClosedY\" = {ClosedY} }}";

        // Explicit implementation of interfaces by forwarding properties to fields
        IArray2D<Vector3> IQuadGrid3D<QuadGrid3D>.PointGrid { [MethodImpl(AggressiveInlining)] get => PointGrid; }
        Boolean IQuadGrid3D<QuadGrid3D>.ClosedX { [MethodImpl(AggressiveInlining)] get => ClosedX; }
        Boolean IQuadGrid3D<QuadGrid3D>.ClosedY { [MethodImpl(AggressiveInlining)] get => ClosedY; }

        // Implemented concept functions and type functions

        // Unimplemented concept functions
        public IArray<Quad3D> Quads => throw new NotImplementedException();
        public Integer PrimitiveSize => throw new NotImplementedException();
        public Integer NumPrimitives => throw new NotImplementedException();
        public IArray<Vector3> Points => throw new NotImplementedException();
        [MethodImpl(AggressiveInlining)]  public QuadGrid3D Deform(System.Func<Vector3, Vector3> f) => throw new NotImplementedException();
        public IArray<Integer> Indices => throw new NotImplementedException();
    }
}
