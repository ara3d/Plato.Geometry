// Autogenerated file: DO NOT EDIT
// Created on 2025-03-06 1:31:00 PM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct Plane: IValue
    {
        // Static factory function
        [MethodImpl(AggressiveInlining)] public static Plane Create(Vector3 normal, Number d) => new Plane(normal, d);

        // Implicit converters to/from value-tuples and deconstructor
        [MethodImpl(AggressiveInlining)] public static implicit operator (Vector3, Number)(Plane self) => (self.Normal, self.D);
        [MethodImpl(AggressiveInlining)] public static implicit operator Plane((Vector3, Number) value) => new(value.Item1, value.Item2);
        [MethodImpl(AggressiveInlining)] public void Deconstruct(out Vector3 normal, out Number d) { normal = Normal; d = D;  }

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(Plane other) => Value.Equals(other.Value);
        [MethodImpl(AggressiveInlining)] public Boolean NotEquals(Plane other) => !Value.Equals(other.Value);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is Plane other ? Equals(other) : false;
        [MethodImpl(AggressiveInlining)] public static Boolean operator==(Plane a, Plane b) => a.Equals(b);
        [MethodImpl(AggressiveInlining)] public static Boolean operator!=(Plane a, Plane b) => !a.Equals(b);
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Value.GetHashCode();
        [MethodImpl(AggressiveInlining)] public override string ToString() => Value.ToString();

        // Explicit implementation of interfaces by forwarding properties to fields

        // Implemented concept functions and type functions

        // Unimplemented concept functions
    }
}
