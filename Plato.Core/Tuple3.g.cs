// Autogenerated file: DO NOT EDIT
// Created on 2025-01-24 1:12:52 AM

using System.Runtime.CompilerServices;
using System.Runtime.Serialization;
using System.Runtime.InteropServices;
using static System.Runtime.CompilerServices.MethodImplOptions;

namespace Plato
{
    [DataContract, StructLayout(LayoutKind.Sequential, Pack=1)]
    public partial struct Tuple3<T0, T1, T2>
    {
        // Fields
        [DataMember] public readonly T0 X0;
        [DataMember] public readonly T1 X1;
        [DataMember] public readonly T2 X2;

        // With functions 
        [MethodImpl(AggressiveInlining)] public Tuple3<T0, T1, T2> WithX0(T0 x0) => new Tuple3<T0, T1, T2>(x0, X1, X2);
        [MethodImpl(AggressiveInlining)] public Tuple3<T0, T1, T2> WithX1(T1 x1) => new Tuple3<T0, T1, T2>(X0, x1, X2);
        [MethodImpl(AggressiveInlining)] public Tuple3<T0, T1, T2> WithX2(T2 x2) => new Tuple3<T0, T1, T2>(X0, X1, x2);

        // Regular Constructor
        [MethodImpl(AggressiveInlining)] public Tuple3(T0 x0, T1 x1, T2 x2) { X0 = x0; X1 = x1; X2 = x2; }

        // Static factory function
        [MethodImpl(AggressiveInlining)] public static Tuple3<T0, T1, T2> Create(T0 x0, T1 x1, T2 x2) => new Tuple3<T0, T1, T2>(x0, x1, x2);

        // Implicit converters to/from value-tuples and deconstructor
        [MethodImpl(AggressiveInlining)] public static implicit operator (T0, T1, T2)(Tuple3<T0, T1, T2> self) => (self.X0, self.X1, self.X2);
        [MethodImpl(AggressiveInlining)] public static implicit operator Tuple3<T0, T1, T2>((T0, T1, T2) value) => new(value.Item1, value.Item2, value.Item3);
        [MethodImpl(AggressiveInlining)] public void Deconstruct(out T0 x0, out T1 x1, out T2 x2) { x0 = X0; x1 = X1; x2 = X2;  }

        // Object virtual function overrides: Equals, GetHashCode, ToString
        [MethodImpl(AggressiveInlining)] public Boolean Equals(Tuple3<T0, T1, T2> other) => X0.Equals(other.X0) && X1.Equals(other.X1) && X2.Equals(other.X2);
        [MethodImpl(AggressiveInlining)] public Boolean NotEquals(Tuple3<T0, T1, T2> other) => !X0.Equals(other.X0) && X1.Equals(other.X1) && X2.Equals(other.X2);
        [MethodImpl(AggressiveInlining)] public override bool Equals(object obj) => obj is Tuple3<T0, T1, T2> other ? Equals(other) : false;
        [MethodImpl(AggressiveInlining)] public override int GetHashCode() => Intrinsics.CombineHashCodes(X0, X1, X2);
        [MethodImpl(AggressiveInlining)] public override string ToString() => $"{{ \"X0\" = {X0}, \"X1\" = {X1}, \"X2\" = {X2} }}";

        // Explicit implementation of interfaces by forwarding properties to fields

        // Implemented concept functions and type functions

        // Unimplemented concept functions
    }
}
