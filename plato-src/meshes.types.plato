
//==
// Meshes and 3D primitive collections
//==

type TriangleMesh2D
    implements ITriangleMesh2D
{ 
    Points: IArray<Point2D>;
    FaceIndices: IArray<Integer3>;
}

type TriangleMesh3D
    implements ITriangleMesh3D
{ 
    Points: IArray<Point3D>;
    FaceIndices: IArray<Integer3>;
}

type QuadMesh2D
    implements IQuadMesh2D
{   
    Points: IArray<Point2D>;
    FaceIndices: IArray<Integer4>;
}

type QuadMesh3D
    implements IQuadMesh3D
{   
    Points: IArray<Point3D>;
    FaceIndices: IArray<Integer4>;
}

type PolyLine2D
    implements IPolyLine2D
{
    Points: IArray<Point2D>;
    Closed: Boolean;
}

type PolyLine3D
    implements IPolyLine3D
{
    Points: IArray<Point3D>;
    Closed: Boolean;
}

type PointArray2D
    implements IPointArray2D
{
	Points: IArray<Point2D>;
}

type PointArray3D
	implements IPointArray3D 
{
	Points: IArray<Point3D>;
}

type LineArray2D
    implements ILineArray2D
{ 
    Lines: IArray<Line2D>;
}

type LineArray3D
    implements ILineArray3D
{ 
    Lines: IArray<Line3D>;
}

type TriangleArray2D
    implements ITriangleArray2D
{ 
    Triangles: IArray<Triangle2D>;
}

type TriangleArray3D
    implements ITriangleArray3D
{ 
    Triangles: IArray<Triangle3D>;
}

type QuadArray2D
    implements IQuadArray2D
{ 
    Quads: IArray<Quad2D>;
}

type QuadArray3D
    implements IQuadArray3D
{ 
    Quads: IArray<Quad3D>;
}

type QuadGrid2D
	implements IQuadGrid2D
{
	Grid: IArray2D<Point2D>;
	ClosedX: Boolean;
    ClosedY: Boolean;
}

type QuadGrid3D
	implements IQuadGrid3D
{
	Grid: IArray2D<Point3D>;
	ClosedX: Boolean;
    ClosedY: Boolean;
}
