
//==
// Meshes and 3D primitive collections
//==

type LineMesh3D
    implements ILineMesh3D
{ 
    Points: IArray<Vector3>;
    Indices: IArray<Integer>;
}

type TriangleMesh3D
    implements ITriangleMesh3D
{ 
    Points: IArray<Vector3>;
    Indices: IArray<Integer>;
}

type QuadMesh3D
    implements IQuadMesh3D
{   
    Points: IArray<Vector3>;
    Indices: IArray<Integer>;
}

type PolyLine2D
    implements IPolyLine2D
{
    Points: IArray<Vector2>;
    Closed: Boolean;
}

type PolyLine3D
    implements IPolyLine3D
{
    Points: IArray<Vector3>;
    Closed: Boolean;
}

type PointArray2D
    implements IPointArray2D
{
	Points: IArray<Vector2>;
}

type PointArray3D
	implements IPointArray3D 
{
	Points: IArray<Vector3>;
}

type LineArray2D
    implements ILineArray2D
{ 
    Lines: IArray<Line2D>;
}

type LineArray3D
    implements ILineArray3D
{ 
    Lines: IArray<Line3D>;
}

type TriangleArray2D
    implements ITriangleArray2D
{ 
    Triangles: IArray<Triangle2D>;
}

type TriangleArray3D
    implements ITriangleArray3D
{ 
    Triangles: IArray<Triangle3D>;
}

type QuadArray2D
    implements IQuadArray2D
{ 
    Quads: IArray<Quad2D>;
}

type QuadArray3D
    implements IQuadArray3D
{ 
    Quads: IArray<Quad3D>;
}

type QuadGrid3D
	implements IQuadGrid3D
{
	PointGrid: IArray2D<Vector3>;
	ClosedX: Boolean;
    ClosedY: Boolean;
}
